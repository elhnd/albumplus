Installation de Laravel
composer create-project Laravel/Laravel nomProjet --prefer-dist

Pour la traduction:
svn export https://github.com/caouecs/Laravel-lang/trunk/src/fr resources/lang/fr
puis aller sur config/app.php et modifier la valeur de 'locale'=>

Installation de l'authentification: 
    pour Laravel 5.7/5.8
    php artisan make:authentification

    pour Laravel 6:
    composer require laravel/ui
    php artisan ui vue --auth

Faire une migration de base de donnée
php artisan migrate 

Installation de la barre de débogage
composer require barryvdh/laravel-debugbar --dev

A chaque modifier du fichier app.js, lancer
npm run dev ou npm run watch pour un enregistrement auto

Créer une vue partiale pour ne pas reproduire un code HTML plusieur fois
Créer des composants (components) pour les buttons et autres

Ajout d'un helpers ():

        Ajouter le code sur un fichier php,
        Ajouter la référence dans composer.json ,Exemple : "files": [
                                                                    "app/helpers.php"
                                                                ]
        Relancer composer:
        composer dumpautoload

Pour vérifier les routes existentes sur notre appli:
php artisan route:list

Pour creer un seeder c-a-d un genre de fixture
php artisan make:seeder UsersTableSeeder
our la migration
php artisan migrate:fresh --seed

Le slug est une version transformée du nom pour être intégrée dans une url.

Pour créer un model 
php artisan make:model Models/Category

Pour créer un middleware
php artisan make:middleware Admin
Puis déclarer le midleware dans app/Http/Kernel.php , Exemple: protected $routeMiddleware = [
                                                                    ...
                                                                    'admin' => \App\Http\Middleware\Admin::class,
                                                                ];

On ajoute une directive à Blade dans AppServiceProvider:

public function boot()
{
    Blade::if('admin', function () {
        return auth()->check() && auth()->user()->admin;
    });
}
On pourra insi écrire @admin dans les vues.

Pour créer un controler:
php artisan make:controller CategoryController --resource
Le fait d’utiliser l’option –resource génére les 7 méthodes de base.

Pour créer une validation
php artisan make:request CategoryRequest

Pour créer un Listener :
php artisan make:listener NameSaving

Pour créer un événement:
php artisan make:event NameSaving
